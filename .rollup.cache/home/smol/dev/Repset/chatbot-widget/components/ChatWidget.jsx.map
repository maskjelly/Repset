{"version":3,"file":"ChatWidget.jsx","sourceRoot":"","sources":["ChatWidget.tsx"],"names":[],"mappings":"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","sourcesContent":["// components/ChatWidget.tsx\nimport React, { useState, ChangeEvent } from 'react';\n\nexport interface Message {\n  text: string;\n  sender: 'user' | 'bot';\n}\n\nexport interface ChatWidgetProps {\n  apiKey: string;\n  backendUrl: string;\n}\n\nconst ChatWidget: React.FC<ChatWidgetProps> = ({ apiKey, backendUrl }) => {\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [input, setInput] = useState<string>('');\n\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n\n    // Add the user message\n    setMessages(prev => [...prev, { text: input, sender: 'user' }]);\n\n    try {\n      const res = await fetch(`${backendUrl}/chat`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${apiKey}`,\n        },\n        body: JSON.stringify({ message: input }),\n      });\n      const data = await res.json();\n      // Append the bot response\n      setMessages(prev => [...prev, { text: data.response, sender: 'bot' }]);\n    } catch (error) {\n      console.error('Error sending message:', error);\n      setMessages(prev => [\n        ...prev,\n        { text: 'Error: Unable to send message.', sender: 'bot' },\n      ]);\n    } finally {\n      setInput('');\n    }\n  };\n\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setInput(e.target.value);\n  };\n\n  return (\n    <div className=\"chat-widget-container\">\n      <div className=\"chat-header\">ChatBot</div>\n      <div className=\"chat-messages\">\n        {messages.map((msg, index) => (\n          <div key={index} className={`chat-message ${msg.sender}`}>\n            {msg.text}\n          </div>\n        ))}\n      </div>\n      <div className=\"chat-input\">\n        <input\n          type=\"text\"\n          value={input}\n          onChange={handleChange}\n          placeholder=\"Type your message...\"\n        />\n        <button onClick={sendMessage}>Send</button>\n      </div>\n      <style jsx>{`\n        .chat-widget-container {\n          position: fixed;\n          bottom: 20px;\n          right: 20px;\n          width: 300px;\n          height: 400px;\n          background: white;\n          border: 1px solid #ccc;\n          border-radius: 8px;\n          overflow: hidden;\n          box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);\n          display: flex;\n          flex-direction: column;\n        }\n        .chat-header {\n          background: #0070f3;\n          color: white;\n          padding: 10px;\n          text-align: center;\n        }\n        .chat-messages {\n          flex: 1;\n          padding: 10px;\n          overflow-y: auto;\n        }\n        .chat-input {\n          display: flex;\n          border-top: 1px solid #ccc;\n        }\n        .chat-input input {\n          flex: 1;\n          padding: 10px;\n          border: none;\n          outline: none;\n        }\n        .chat-input button {\n          padding: 10px;\n          border: none;\n          background: #0070f3;\n          color: white;\n          cursor: pointer;\n        }\n      `}</style>\n    </div>\n  );\n};\n\nexport default ChatWidget;\n"]}